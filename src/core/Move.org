#+TITLE: Move
#+AUTHOR: Sean Allred
#+DATE: [2014-03-09 Sun]

* Overview
:PROPERTIES:
:ID:       1FF55631-3B34-4177-9EA8-380F642BD82F
:END:
#+BEGIN_SRC python :tangle "../ssa/core/Move.py" :noweb tangle
  import inspect
  class Move:
      """A function from G, v -> G'
  
      <<documentation>>
      """
      #% move %#
      def __init__(self, move):
          assert len(inspect.getargspec(move).args) is 2
          self.move = move
  
      def __call__(self, graph, node):
          return self.move(graph, node)
      #% endmove %#
#+END_SRC
* Online Documentation
:PROPERTIES:
:noweb-ref: documentation
:END:
#+BEGIN_SRC markdown
  Create an action like so:
  
      >>> action = Move(lambda G, v: v['marked'] = True,
                          'v.marked \gets True',
                          'Marks $v$')
  
  You can retrieve the documentation and TeX representation of the
  object as you would a `TeXableEntity`:
  
      >>> action.doc
      'Mark $v$'
      >>> action.TeX
      'v.marked \gets True'
  
  You can also *call* `Move` objects, passing a graph and node as
  arguments.  This functionality is deferred to the member function
  `Move.action`.
#+END_SRC
* Test
#+BEGIN_SRC python
  import unittest
  from nose.tools import *
  from ssa.core.Move import Move
#+END_SRC
